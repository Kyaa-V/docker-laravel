user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Hide nginx version
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /var/www/public;
        index index.php index.html index.htm;

        # Logging
        error_log /var/log/nginx/error.log warn;
        access_log /var/log/nginx/access.log main;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;

        # Main location block
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # PHP processing
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            
            # Choose one of these options:
            # Option 1: TCP connection (recommended)
            fastcgi_pass unix:/var/run/php-fpm.sock;  # Use PHP-FPM socket
            
            # Option 2: Unix socket (uncomment if using socket)
            # fastcgi_pass unix:/var/run/php-fpm.sock;
            
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
            
            # FastCGI optimizations
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_temp_file_write_size 256k;
            fastcgi_connect_timeout 60;
            fastcgi_send_timeout 60;
            fastcgi_read_timeout 60;
        }

        # Static files with long cache
        location ~* \.(jpg|jpeg|gif|png|webp|svg|css|js|ico|xml|txt)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            log_not_found off;
            access_log off;
        }

        # Handle favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Handle robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Deny access to sensitive files
        location ~ /\.ht {
            deny all;
        }
        
        location ~ /\.(git|svn|env|htaccess|htpasswd) {
            deny all;
        }

        # Deny access to Laravel sensitive directories
        location ~ ^/(storage|bootstrap/cache) {
            deny all;
        }

        # Allow Laravel storage access for public files
        location ^~ /storage/ {
            alias /var/www/storage/app/public/;
            try_files $uri =404;
        }

        # Client settings
        client_max_body_size 20M;
        client_body_timeout 60;
        client_header_timeout 60;
        client_body_buffer_size 128k;
        large_client_header_buffers 4 16k;
    }

    # Additional server block for health checks (optional)
    server {
        listen 8080;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}